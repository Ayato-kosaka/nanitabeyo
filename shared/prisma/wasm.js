
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Backend_event_logsScalarFieldEnum = {
  id: 'id',
  event_name: 'event_name',
  error_level: 'error_level',
  function_name: 'function_name',
  user_id: 'user_id',
  payload: 'payload',
  request_id: 'request_id',
  created_at: 'created_at',
  created_commit_id: 'created_commit_id'
};

exports.Prisma.ConfigScalarFieldEnum = {
  key: 'key',
  value: 'value',
  description: 'description'
};

exports.Prisma.Dish_categoriesScalarFieldEnum = {
  id: 'id',
  label_en: 'label_en',
  labels: 'labels',
  image_url: 'image_url',
  origin: 'origin',
  cuisine: 'cuisine',
  tags: 'tags',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no'
};

exports.Prisma.Dish_category_variantsScalarFieldEnum = {
  id: 'id',
  dish_category_id: 'dish_category_id',
  surface_form: 'surface_form',
  source: 'source',
  created_at: 'created_at'
};

exports.Prisma.Dish_likesScalarFieldEnum = {
  id: 'id',
  dish_media_id: 'dish_media_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Dish_mediaScalarFieldEnum = {
  id: 'id',
  dish_id: 'dish_id',
  user_id: 'user_id',
  media_path: 'media_path',
  media_type: 'media_type',
  thumbnail_path: 'thumbnail_path',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no'
};

exports.Prisma.Dish_reviewsScalarFieldEnum = {
  id: 'id',
  dish_id: 'dish_id',
  comment: 'comment',
  original_language_code: 'original_language_code',
  user_id: 'user_id',
  rating: 'rating',
  price_cents: 'price_cents',
  currency_code: 'currency_code',
  created_dish_media_id: 'created_dish_media_id',
  imported_user_name: 'imported_user_name',
  imported_user_avatar: 'imported_user_avatar',
  created_at: 'created_at'
};

exports.Prisma.DishesScalarFieldEnum = {
  id: 'id',
  restaurant_id: 'restaurant_id',
  category_id: 'category_id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no'
};

exports.Prisma.External_api_logsScalarFieldEnum = {
  id: 'id',
  request_id: 'request_id',
  function_name: 'function_name',
  api_name: 'api_name',
  endpoint: 'endpoint',
  method: 'method',
  request_payload: 'request_payload',
  response_payload: 'response_payload',
  status_code: 'status_code',
  error_message: 'error_message',
  response_time_ms: 'response_time_ms',
  user_id: 'user_id',
  created_at: 'created_at',
  created_commit_id: 'created_commit_id'
};

exports.Prisma.Frontend_event_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  event_name: 'event_name',
  error_level: 'error_level',
  path_name: 'path_name',
  payload: 'payload',
  created_at: 'created_at',
  created_app_version: 'created_app_version',
  created_commit_id: 'created_commit_id'
};

exports.Prisma.PayoutsScalarFieldEnum = {
  id: 'id',
  bid_id: 'bid_id',
  transfer_id: 'transfer_id',
  dish_media_id: 'dish_media_id',
  amount_cents: 'amount_cents',
  currency_code: 'currency_code',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no'
};

exports.Prisma.Prompt_familiesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  purpose: 'purpose',
  weight: 'weight'
};

exports.Prisma.Prompt_usagesScalarFieldEnum = {
  id: 'id',
  family_id: 'family_id',
  variant_id: 'variant_id',
  target_type: 'target_type',
  target_id: 'target_id',
  generated_text: 'generated_text',
  used_prompt_text: 'used_prompt_text',
  input_data: 'input_data',
  llm_model: 'llm_model',
  temperature: 'temperature',
  generated_user: 'generated_user',
  created_at: 'created_at',
  created_request_id: 'created_request_id',
  metadata: 'metadata'
};

exports.Prisma.Prompt_variantsScalarFieldEnum = {
  id: 'id',
  family_id: 'family_id',
  variant_number: 'variant_number',
  prompt_text: 'prompt_text',
  improvement_note: 'improvement_note',
  created_by: 'created_by',
  metadata: 'metadata'
};

exports.Prisma.ReactionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  target_type: 'target_type',
  target_id: 'target_id',
  action_type: 'action_type',
  meta: 'meta',
  created_at: 'created_at',
  created_version: 'created_version',
  lock_no: 'lock_no'
};

exports.Prisma.Restaurant_bidsScalarFieldEnum = {
  id: 'id',
  restaurant_id: 'restaurant_id',
  user_id: 'user_id',
  payment_intent_id: 'payment_intent_id',
  amount_cents: 'amount_cents',
  currency_code: 'currency_code',
  start_date: 'start_date',
  end_date: 'end_date',
  status: 'status',
  refund_id: 'refund_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no'
};

exports.Prisma.RestaurantsScalarFieldEnum = {
  id: 'id',
  google_place_id: 'google_place_id',
  name: 'name',
  name_language_code: 'name_language_code',
  latitude: 'latitude',
  longitude: 'longitude',
  image_url: 'image_url',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  display_name: 'display_name',
  avatar: 'avatar',
  bio: 'bio',
  last_login_at: 'last_login_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lock_no: 'lock_no',
  username: 'username'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.backend_event_logs_error_level = exports.$Enums.backend_event_logs_error_level = {
  verbose: 'verbose',
  debug: 'debug',
  log: 'log',
  warn: 'warn',
  error: 'error'
};

exports.frontend_event_logs_error_level = exports.$Enums.frontend_event_logs_error_level = {
  verbose: 'verbose',
  debug: 'debug',
  log: 'log',
  warn: 'warn',
  error: 'error'
};

exports.payout_status = exports.$Enums.payout_status = {
  pending: 'pending',
  paid: 'paid',
  refunded: 'refunded'
};

exports.prompt_families_purpose = exports.$Enums.prompt_families_purpose = {
  spot_guide_manuscript: 'spot_guide_manuscript'
};

exports.restaurant_bid_status = exports.$Enums.restaurant_bid_status = {
  pending: 'pending',
  paid: 'paid',
  refunded: 'refunded'
};

exports.Prisma.ModelName = {
  backend_event_logs: 'backend_event_logs',
  config: 'config',
  dish_categories: 'dish_categories',
  dish_category_variants: 'dish_category_variants',
  dish_likes: 'dish_likes',
  dish_media: 'dish_media',
  dish_reviews: 'dish_reviews',
  dishes: 'dishes',
  external_api_logs: 'external_api_logs',
  frontend_event_logs: 'frontend_event_logs',
  payouts: 'payouts',
  prompt_families: 'prompt_families',
  prompt_usages: 'prompt_usages',
  prompt_variants: 'prompt_variants',
  reactions: 'reactions',
  restaurant_bids: 'restaurant_bids',
  restaurants: 'restaurants',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
